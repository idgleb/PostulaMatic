name: CI/CD and Deploy

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests
      run: |
        python manage.py test
        python manage.py check
        
    - name: Format and lint code (permissive)
      run: |
        pip install black isort ruff
        echo "Running Black check..."
        black --check . || echo "Black check failed but continuing"
        echo "Running isort check..."
        isort --check-only . || echo "isort check failed but continuing"
        echo "Running ruff check..."
        ruff check . --exit-zero || echo "ruff check completed with warnings"
        echo "All linting checks completed"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: 22
        script: |
          cd ${{ secrets.APP_DIR }}
          
          # Backup current config
          cp conf.d/postulamatic.conf conf.d/postulamatic.conf.backup.$(date +%Y%m%d_%H%M%S) || true
          
          # Pull latest changes
          git pull origin master
          
          # Update Nginx config from repository
          if [ -f "nginx/postulamatic.conf" ]; then
            cp nginx/postulamatic.conf conf.d/postulamatic.conf
            echo "Nginx config updated"
          fi
          
          # Test Nginx config (but don't reload yet)
          docker exec nginx-proxy nginx -t
          if [ $? -ne 0 ]; then
            echo "Nginx config is invalid, restoring backup"
            cp conf.d/postulamatic.conf.backup.$(date +%Y%m%d_%H%M%S) conf.d/postulamatic.conf
            exit 1
          fi
          echo "Nginx config is valid"
          
          # Deploy Django app FIRST
          docker compose build
          docker compose run --rm postulamatic_web python manage.py migrate
          docker compose up -d
          
          # Wait for containers to be ready
          echo "Waiting for containers to start..."
          sleep 15
          
          # NOW reload Nginx to pick up new container IPs
          docker exec nginx-proxy nginx -s reload
          echo "Nginx reloaded after container restart"
          
          # Additional wait for Nginx to process new config
          sleep 5
          
          # Health check with retry logic
          echo "Performing health check..."
          for i in {1..3}; do
            if curl -f -s https://postulamatic.app > /dev/null; then
              echo "Health check passed (attempt $i)"
              echo "Deployment successful"
              exit 0
            else
              echo "Health check failed (attempt $i), retrying..."
              sleep 10
            fi
          done
          
          echo "Health check failed after 3 attempts"
          exit 1
