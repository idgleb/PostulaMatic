name: Deploy Postulamatic

on:
  push:
    branches: ["master"]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Preparar SSH
        shell: bash
        run: |
          set -e
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

          # Generar known_hosts (opcionalmente combina con secreto si lo tenés)
          touch ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          ssh-keyscan -H 178.156.188.95 >> ~/.ssh/known_hosts
          ssh-keyscan -H postulamatic.app >> ~/.ssh/known_hosts
          ssh-keyscan -H www.postulamatic.app >> ~/.ssh/known_hosts
          # Si preferís mantenerlo en un secreto, descomenta esto:
          # echo "${{ secrets.SSH_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts

      - name: Sincronizar código al servidor (rsync)
        shell: bash
        run: |
          rsync -az --delete \
            --exclude ".git/" \
            --exclude "__pycache__/" \
            --exclude ".venv/" \
            --exclude "node_modules/" \
            -e "ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes" \
            ./ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:~/apps/postulamatic/

      - name: Build & restart con Docker Compose en el servidor
        shell: bash
        run: |
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes \
            ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} 'bash -se' <<'EOSSH'
          set -euo pipefail
          cd ~/apps/postulamatic
          docker compose build
          docker compose up -d
          EOSSH
